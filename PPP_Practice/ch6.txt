//this is where the main moto of the file is declared

//#include "std_lib_facilities.h"


/*int main()
{
    cout << "Greetings programs" << endl;
		
    //throw runtime_error("abc");
    //cin.get();
}*/

/*
int lval = 0, rval = 0;

	std::cout << "Expression(X to end):  ";
	std::cin >> lval;

	for (char op = 0; std::cin >> op;)
	{
		if(op != 'x')
		    std::cin >> rval;

		switch (op)
		{
		case '+':
			lval = lval + rval;
			break;

		case '-':
			lval = lval - rval;
			break;

		case '*':
			lval = lval * rval;
			break;

		case '/':
			lval = lval / rval;
			break;

		case '%':
			lval = lval % rval;
			break;

		case 'x': default:
			std::cout << "result: " << lval << std::endl;

			return 0;
		}
		
	}

/*
	class token
	{
	public:
		char kind;
		int value;
	};
/*
/*  token t;
	t.kind = '+';
	cout << t.kind << endl;

	token t2; 
	t2.kind = '8';
	t2.value = 3.14;

	token tt = t;
	cout << tt.kind << " " << tt.value << endl;

	t = t2;
	cout << t.value << endl;
*/


//double left = 5;
//left %= 2; //cant use double
//switch(left) //cant use double

/*
#include <iterator>

class token
{
private: 
	char type;
	double val;

public:
	token(char c) : type(c)
	{}

	token(char c, double val) : type(c), val(val)
	{}

	char getType()
	{
		return type;
	}

	int getVal()
	{
		return val;
	}
};

int main()
{
	cout << "Greetings, program!" << endl;
	
	throw runtime_error("abc");
	
	cin.get();
	auto a = 0;
	std::cout << "Expression: ";
	while (cin >> a)
	{
		


	}
	token t1('8', 5);
	token t2('+');
	token t3('8', 2);

	vector<token>tok;
	tok.push_back(t1);
	tok.push_back(t2);
	tok.push_back(t3);

	double res = 0;

	std::cout << "Size: " << tok.size() << std::endl;

	for (int i = 0; i < tok.size(); ++i)
	{
		if (tok.at(i).getType() == '+')
		{
			std::cout << tok.at(i - 1).getVal() << " + " << tok.at(i + 1).getVal() << " = ";
			res = tok.at(i - 1).getVal() + tok.at(i + 1).getVal();
		}

	}

	std::cout << res << std::endl;
	
	return 0;
	
}*/



